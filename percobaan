<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Web Penyimpanan Tugas dan File</title>
    <style>
        /* Resetting margin and padding */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        /* Mengatur font dasar dan latar belakang */
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            color: #333;
            line-height: 1.6;
        }

        .container {
            width: 100%;
            max-width: 600px;
            margin: 20px auto;
            background-color: #fff;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        header h1 {
            text-align: center;
            color: #4CAF50;
            font-size: 2rem;
        }

        form {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        form label {
            font-size: 1.1rem;
        }

        form textarea {
            padding: 10px;
            font-size: 1rem;
            border: 1px solid #ccc;
            border-radius: 5px;
            resize: vertical;
            min-height: 100px;
        }

        form button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px;
            font-size: 1rem;
            cursor: pointer;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }

        form button:hover {
            background-color: #45a049;
        }

        input[type="file"] {
            padding: 5px;
        }

        section {
            margin-top: 30px;
        }

        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            background-color: #e0e0e0;
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 5px;
        }

        a {
            text-decoration: none;
            color: #007BFF;
            font-size: 1rem;
        }

        a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>Web Penyimpanan Tugas dan File</h1>
        </header>
        
        <main>
            <form id="tugasForm" enctype="multipart/form-data">
                <label for="tugasInput">Masukkan Tugas:</label>
                <textarea id="tugasInput" placeholder="Tuliskan tugas di sini..." required></textarea>
                <button type="submit">Simpan Tugas</button>
            </form>

            <!-- Form untuk upload file -->
            <form id="fileUploadForm" enctype="multipart/form-data">
                <label for="fileInput">Upload File (PDF, PPT, Excel, Word):</label>
                <input type="file" id="fileInput" accept=".pdf, .ppt, .pptx, .xls, .xlsx, .doc, .docx" required />
                <button type="submit">Upload File</button>
            </form>

            <section id="tugasList">
                <h2>Tugas Tersimpan:</h2>
                <ul id="tugasListItems">
                    <!-- Daftar tugas akan tampil di sini -->
                </ul>
            </section>

            <section id="fileList">
                <h2>File Tersimpan:</h2>
                <ul id="fileListItems">
                    <!-- Daftar file akan tampil di sini -->
                </ul>
            </section>
        </main>
    </div>

    <script>
        const tugasForm = document.getElementById('tugasForm');
        const tugasInput = document.getElementById('tugasInput');
        const tugasListItems = document.getElementById('tugasListItems');

        const fileUploadForm = document.getElementById('fileUploadForm');
        const fileInput = document.getElementById('fileInput');
        const fileListItems = document.getElementById('fileListItems');

        // Memuat tugas dan file yang disimpan di localStorage
        function loadDataFromLocalStorage() {
            const storedTugas = JSON.parse(localStorage.getItem('tugas')) || [];
            const storedFiles = JSON.parse(localStorage.getItem('files')) || [];

            storedTugas.forEach(tugasText => {
                addTugas(tugasText);
            });

            storedFiles.forEach(fileData => {
                addFile(fileData.name, fileData.url);
            });
        }

        // Fungsi untuk menambahkan tugas ke dalam list
        function addTugas(tugasText) {
            const li = document.createElement('li');
            li.textContent = tugasText;
            tugasListItems.appendChild(li);
        }

        // Fungsi untuk menambahkan file ke dalam list
        function addFile(fileName, fileURL) {
            const li = document.createElement('li');
            const link = document.createElement('a');
            link.href = fileURL;
            link.textContent = fileName;
            link.target = '_blank';
            li.appendChild(link);
            fileListItems.appendChild(li);
        }

        // Menangani pengiriman form tugas
        tugasForm.addEventListener('submit', function(event) {
            event.preventDefault();
            const tugasText = tugasInput.value.trim();
            if (tugasText) {
                addTugas(tugasText);
                // Menyimpan tugas di localStorage
                const tugasList = JSON.parse(localStorage.getItem('tugas')) || [];
                tugasList.push(tugasText);
                localStorage.setItem('tugas', JSON.stringify(tugasList));
                tugasInput.value = ''; // Mengosongkan textarea setelah tugas ditambahkan
            }
        });

        // Menangani pengiriman form upload file
        fileUploadForm.addEventListener('submit', function(event) {
            event.preventDefault();
            const file = fileInput.files[0];
            if (file) {
                const fileURL = URL.createObjectURL(file); // Membuat URL sementara untuk file
                addFile(file.name, fileURL);

                // Menyimpan file di localStorage
                const fileList = JSON.parse(localStorage.getItem('files')) || [];
                fileList.push({ name: file.name, url: fileURL });
                localStorage.setItem('files', JSON.stringify(fileList));

                fileInput.value = ''; // Mengosongkan input file setelah file di-upload
            }
        });

        // Load data dari localStorage ketika halaman dimuat
        loadDataFromLocalStorage();
    </script>
</body>
</html>
